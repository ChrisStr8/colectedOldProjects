#BlueJ class context
comment0.params=
comment0.target=DominoGame()
comment0.text=\ \ Constructor\:\r\n\ Initialise\ the\ hand\ field\ to\ have\ an\ array\ that\ will\ hold\ NUM_HAND\ Dominos\r\n\ Initialise\ the\ table\ field\ to\ have\ an\ ArrayList\ of\ Dominos,\r\n\ set\ up\ the\ GUI\ (buttons\ and\ mouse)\r\n\ \ restart\ the\ game\r\n
comment1.params=
comment1.target=void\ restart()
comment1.text=\r\n\ Restart\ the\ game\:\r\n\ \ set\ the\ table\ to\ be\ empty,\r\n\ \ set\ the\ hand\ to\ have\ no\ dominos\r\n
comment10.params=
comment10.target=java.lang.Boolean\ checkLegal()
comment11.params=action\ x\ y
comment11.target=void\ doMouse(java.lang.String,\ double,\ double)
comment11.text=\ Allows\ the\ user\ to\ select\ a\ position\ in\ the\ hand\ using\ the\ mouse.\r\n\ If\ the\ mouse\ is\ released\ over\ the\ hand,\ then\ sets\ \ selectedPos\r\n\ to\ be\ the\ index\ into\ the\ hand\ array.\r\nRedraws\ the\ hand\ and\ table
comment12.params=
comment12.target=void\ redraw()
comment12.text=\r\n\ \ Redraw\ the\ table\ and\ the\ hand.\r\n\ \ To\ work\ with\ the\ code\ above,\ this\ needs\ to\ use\ the\ constants\:\r\n\ \ \ -\ DOMINO_SPACING,\ HAND_HEIGHT,\ HAND_LEFT,\ HAND_TOP,\ TABLE_LEFT,\ TABLE_TOP\r\n\ \ \ See\ the\ descriptions\ where\ these\ fields\ are\ defined.\r\n\ \ Needs\ to\ clear\ the\ graphics\ pane,\r\n\ \ then\ draw\ the\ hand\ with\ all\ its\ dominos,\ \r\n\ \ then\ outline\ the\ selected\ position\ on\ the\ hand\r\n\ \ then\ draw\ the\ rows\ of\ dominos\ on\ the\ table.\r\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ pickup()
comment2.text=\r\n\ If\ there\ is\ at\ least\ one\ empty\ position\ on\ the\ hand,\ then\r\n\ create\ a\ new\ random\ domino\ and\ put\ it\ into\ the\ first\ empty\ position\ on\ the\ hand.\r\n\ (needs\ to\ search\ along\ the\ array\ for\ an\ empty\ position.)\r\n
comment3.params=
comment3.target=void\ drawHand()
comment3.text=\r\n\ Draws\ the\ outline\ of\ the\ hand,\r\n\ draws\ all\ the\ Dominos\ in\ the\ hand,\r\n\ highlights\ the\ selected\ position\ in\ some\ way\r\n
comment4.params=
comment4.target=void\ placeDomino()
comment4.text=\r\n\ Move\ domino\ from\ selected\ position\ on\ hand\ (if\ there\ is\ domino\ there)\ to\ the\ table\r\n\ The\ selectedPos\ field\ contains\ the\ index\ of\ the\ selected\ domino.\r\n
comment5.params=
comment5.target=void\ drawTable()
comment5.text=\r\n\ Draws\ the\ list\ of\ Dominos\ on\ the\ table,\ 10\ to\ a\ row\r\n\ Note,\ has\ to\ wrap\ around\ to\ a\ new\ row\ when\ it\ gets\ to\ the\r\n\ edge\ of\ the\ table\r\n
comment6.params=
comment6.target=void\ flipDomino()
comment6.text=\r\n\ If\ there\ is\ a\ domino\ at\ the\ selected\ position\ in\ the\ hand,\ \r\n\ flip\ it\ over.\r\n
comment7.params=
comment7.target=void\ moveLeft()
comment7.text=\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ position\ on\ its\ left\ (if\ there\ is\ such\ a\ position)\r\n\ and\ also\ decrement\ the\ selected\ position\ to\ follow\ the\ domino\ \r\n
comment8.params=
comment8.target=void\ moveRight()
comment8.text=\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ \ position\ on\ its\ right\ (if\ there\ is\ such\ a\ position)\r\n\ \ and\ also\ increment\ the\ selected\ position\ to\ follow\ the\ domino\ \r\n
comment9.params=
comment9.target=void\ suggestDomino()
comment9.text=\r\n\ If\ the\ table\ is\ empty,\ only\ a\ double\ can\ be\ suggested.\r\n\ If\ the\ table\ is\ not\ empty,\ see\ if\ one\ domino\ has\ a\ number\ that\ matches\ one\ of\ the\ \r\n\ \ \ \ numbers\ of\ the\ last\ domino.\r\n
numComments=14

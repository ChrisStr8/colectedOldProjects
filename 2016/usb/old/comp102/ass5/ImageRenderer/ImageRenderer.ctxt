#BlueJ class context
comment0.params=
comment0.target=void\ renderImageCore()
comment0.text=\ Core\:\r\n\ Renders\ a\ ppm\ image\ file.\r\n\ Asks\ for\ the\ name\ of\ the\ file,\ then\ calls\ renderImageHelper.\r\n
comment1.params=sc
comment1.target=void\ renderImageHelper(java.util.Scanner)
comment1.text=\ Core\:\r\n\ Renders\ a\ ppm\ image\ file.\r\n\ Renders\ the\ image\ at\ position\ (left,\ top).\r\n\ Each\ pixel\ of\ the\ image\ \ is\ rendered\ by\ a\ square\ of\ size\ pixelSize\r\n\ Assumes\ that\r\n\ -\ the\ colour\ depth\ is\ 255,\r\n\ -\ there\ is\ just\ one\ image\ in\ the\ file\ (not\ "animated"),\ and\r\n\ -\ there\ are\ no\ comments\ in\ the\ file.\r\n\ The\ first\ four\ tokens\ are\ "P3",\ number\ of\ columns,\ number\ of\ rows,\ 255\r\n\ The\ remaining\ tokens\ are\ the\ pixel\ values\ (red,\ green,\ blue\ for\ each\ pixel)\r\n
comment2.params=
comment2.target=void\ renderAnimatedImage()
comment2.text=\ Completion\r\n\ Renders\ a\ ppm\ image\ file\ which\ may\ be\ animated\ (multiple\ images\ in\ the\ file)\r\n\ Asks\ for\ the\ name\ of\ the\ file,\ then\ renders\ the\ image\ at\ position\ (left,\ top).\r\n\ Each\ pixel\ of\ the\ image\ \ is\ rendered\ by\ a\ square\ of\ size\ pixelSize\r\n\ Renders\ each\ image\ in\ the\ file\ in\ turn\ with\ 200\ mSec\ delay.\r\n\ Repeats\ the\ sequence\ 3\ times.\r\n
comment3.params=sc
comment3.target=void\ checkComment(java.util.Scanner)
comment4.params=
comment4.target=ImageRenderer()
comment4.text=----------\ The\ code\ below\ is\ already\ written\ for\ you\ ----------\ *
numComments=5
